---
  - name: froide | install_postgresql.yml | ensure CA certificates for signing key
    apt: name=ca-certificates state=present

  - name: froide | install_postgresql.yml | add postgresql apt signing key
    apt_key: url='https://www.postgresql.org/media/keys/ACCC4CF8.asc'

  - name: froide | install_postgresql.yml | add official postgresql apt repository
    apt_repository: repo="deb http://apt.postgresql.org/pub/repos/apt/ {{ansible_distribution_release}}-pgdg main"

  - name: froide | install_postgresql.yml | install postgresql dependencies
    apt: name={{ item }} state=present update_cache=yes cache_valid_time=3600
    with_items:
      - "python-psycopg2"
      - "python-pycurl"
      - "locales"
      - "libpq-dev"
    environment: env

  - name: froide | install_postgresql.yml | install postgresql
    apt: name={{ item }} state=present update_cache=yes cache_valid_time=3600
    with_items:
      - "postgresql-{{postgresql.version}}"
      - "postgresql-client-{{postgresql.version}}"
      - "postgresql-contrib-{{postgresql.version}}"
    environment: env

  - name: froide | install_postgresql.yml | ensure postgresql is running
    service: name=postgresql state=started

  - name: froide | install_postgresql.yml | ensure users
    postgresql_user:
      name: "{{ item.name }}"
      password: "{{ item.password | default('password')}}"
      port: "{{postgresql.port}}"
      state: present
      login_user: "{{ postgresql.admin.username }}"
    sudo: yes
    sudo_user: "{{ postgresql.admin.username }}"
    with_items: postgresql.users
    when: postgresql.users is defined and postgresql.users|length > 0

  - name: froide | install_postgresql.yml | ensure databases
    postgresql_db:
      name: "{{ item.name }}"
      owner: "{{ item.owner }}"
      encoding: "{{ item.encoding }}"
      lc_collate: "{{ item.locale }}"
      lc_ctype: "{{ item.locale }}"
      port: "{{postgresql.port}}"
      template: "template0"
      state: present
      login_user: "{{ postgresql.admin.username }}"
    sudo: yes
    sudo_user: "{{ postgresql.admin.username }}"
    with_items: postgresql.databases
    when: postgresql.databases is defined and postgresql.databases|length > 0

  - name: froide | install_postgresql.yml | ensure privileges
    postgresql_user:
      name: "{{ item.name }}"
      db: "{{ item.db | default(omit)}}"
      port: "{{postgresql.port}}"
      priv: "{{item.priv | default(omit)}}"
      state: present
      login_user: "{{ postgresql.admin.username }}"
    sudo: yes
    sudo_user: "{{ postgresql.admin.username }}"
    with_items: postgresql.user_privileges
    when: postgresql.user_privileges is defined and postgresql.user_privileges|length > 0
